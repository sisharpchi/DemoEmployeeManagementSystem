name: Employee Management System CI

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: EmployeeSystem
  AZURE_WEBAPP_PACKAGE_PATH: "./publish"
  DOTNET_VERSION: "8.x"
  SOLUTION_PATH: "./DemoEmployeeManagementSystemSolution/DemoEmployeeManagementSystemSolution.sln"
  CLIENT_PROJECT_PATH: "./DemoEmployeeManagementSystemSolution/Client"
  API_PROJECT_PATH: "./DemoEmployeeManagementSystemSolution/Server"
  PUBLISH_DIR: "./publish"

jobs:
  build-and-test:
    name: Build, Test & Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build solution
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration Release --no-restore

      - name: Run tests
        run: dotnet test ${{ env.SOLUTION_PATH }} --configuration Release --no-build --verbosity normal

      - name: Publish Blazor WebAssembly Client
        run: dotnet publish ${{ env.CLIENT_PROJECT_PATH }} -c Release -o client_build

      - name: Publish API project (includes embedded Blazor)
        run: dotnet publish ${{ env.API_PROJECT_PATH }} --configuration Release --output ${{ env.PUBLISH_DIR }}

      - name: Check published files
        run: ls -la ${{ env.PUBLISH_DIR }}

      - name: Upload published artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.PUBLISH_DIR }}

  deploy:
    name: Deploy to Azure Web App
    runs-on: ubuntu-latest
    needs: [build-and-test]

    steps:
      - name: Download published artifacts
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
